@page "/agregarempleado"
@inject IPuestoService puestoService
@inject IEmpleadoService empleadoService

<PageTitle>Agregar Empleado</PageTitle>
<h3 class="text-lg-center">Agregar Empleado</h3>
<div class="container">
    @if(Exito)
    {
        <div class="alert alert-success" role="alert">
            ¡La operacion se realizo con exito!
        </div>
    }
    else
    {
        @if (puestos != null)
        {
            <div class="mb-3">
                <label for="nombres" class="form-label">Nombre</label>
                <input type="text" class="form-control" id="nombres" placeholder="Nombres" @bind="empleado.Nombres" required>
            </div>

            <div class="mb-3">
                <label for="apellidos" class="form-label">Apellidos</label>
                <input type="text" class="form-control" id="apellidos" placeholder="Apellidos" @bind="empleado.Apellidos" required>
            </div>

            <div class="mb-3">
                <label for="DPI" class="form-label">DPI</label>
                <input type="number" class="form-control" id="DPI" placeholder="DPI" @bind="empleado.DPI" required>
            </div>
            <div class="mb-3">
                <label for="nit" class="form-label">NIT</label>
                <input type="number" class="form-control" id="nit" placeholder="NIT" @bind="empleado.NIT" required>
            </div>
            <div class="mb-3">
                <label for="telefono" class="form-label">Telefono</label>
                <input type="tel" class="form-control" id="telefono" placeholder="Telefono" @bind="empleado.Telefono" required>
            </div>
            <div class="mb-3">
                <label for="direccion" class="form-label">Direccion</label>
                <input type="text" class="form-control" id="direccion" placeholder="Direccion" @bind="empleado.DireccionFiscal" required>
            </div>

            <div class="mb-3">
                <label for="Estado" class="form-label">Estado</label>
                <select class="form-select" aria-label="Default select example" @bind="empleado.Estado" id="Estado">
                    <option value="Activo">Activo</option>
                    <option value="Inactivo">Inactivo</option>
                </select>
            </div>

            <div class="mb-3">
                <label for="Fecha" class="form-label">Fecha Ingreso</label>
                <input type="datetime-local" class="form-control" id="Fecha" placeholder="Fecha" @bind="empleado.FechaIngreso" required>
            </div>

            <div class="mb-3">
                <label for="Salario" class="form-label">Salario Base</label>
                <input type="number" class="form-control" id="Salario" placeholder="Salario" @bind="empleado.SalarioBase" required>
            </div>

            <div class="mb-3">
                <label for="puesto_id" class="form-label">Puesto</label>
                <select class="form-select" aria-label="Default select example" @bind="empleado.PuestoId" id="puesto_id">
                    <option value="0">Ninguno</option>
                    @foreach (var puesto in puestos)
                    {
                        <option value="@puesto.PuestoId">@puesto.Nombre</option>
                    }
                </select>
            </div>

            <button type="button" class="btn btn-primary" @onclick="PostEmpleado">Agregar</button>
        }
        else
        {
            if (!string.IsNullOrEmpty(error))
            {
                <div class="alert alert-danger" role="alert">
                    @error
                </div>
            }
            else
            {
                <div class="text-center">
                    <div class="spinner-border" role="status">
                        <span class="visually-hidden">Loading...</span>
                    </div>
                </div>
            }
        }
    }
</div>




@code {
    private List<Puesto>? puestos { get; set; }
    private string error { get; set; }
    private int? puestoSeleccion { get; set; }
    private Empleado? empleado = new Empleado() { FechaIngreso = DateTime.Now, Estado = "Activo"};
    private bool Exito { get; set; }

    protected override async Task OnInitializedAsync()
    {

        try
        {
            puestos = await puestoService.GetPuesto();
        }
        catch (Exception e)
        {
            error = e.Message;
        }
    }

    private async Task PostEmpleado()
    {

        try
        {
            var response = await empleadoService.PostEmpleado(empleado);
            Exito = response.IsSuccessStatusCode;
        }
        catch (Exception e)
        {
            error = e.Message;
        }

    }
}